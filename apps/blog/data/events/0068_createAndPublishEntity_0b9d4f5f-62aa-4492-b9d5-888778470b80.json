{
  "id": "0b9d4f5f-62aa-4492-b9d5-888778470b80",
  "parentId": "88350878-a247-4564-b793-05a73497fca0",
  "type": "createAndPublishEntity",
  "createdAt": "2024-03-18T19:56:36.080Z",
  "createdBy": "97f8d2c7-60ee-4e88-a4d2-43f366d212f0",
  "entity": {
    "id": "f3125418-8a32-40ba-ac50-c53a211b48dc",
    "info": {
      "type": "Article",
      "name": "Codapi test",
      "authKey": "",
      "resolvedAuthKey": "",
      "schemaVersion": 3
    },
    "fields": {
      "title": "Codapi test",
      "slug": "codapi-test",
      "description": "Test article for codapi",
      "body": {
        "root": {
          "children": [
            {
              "children": [],
              "direction": null,
              "format": "",
              "indent": 0,
              "type": "paragraph",
              "version": 1
            },
            {
              "type": "component",
              "data": {
                "id": null,
                "dependsOn": "init",
                "code": "const schemaSpecification = await adminClient.getSchemaSpecification();\nconsole.log('Schema:', schemaSpecification.valueOrThrow());\n",
                "type": "CodapiSnippet"
              },
              "format": "",
              "version": 1
            },
            {
              "children": [],
              "direction": null,
              "format": "",
              "indent": 0,
              "type": "paragraph",
              "version": 1
            },
            {
              "type": "component",
              "data": {
                "id": "init",
                "dependsOn": null,
                "code": "const dossierCore = await import(\"https://esm.sh/@dossierhq/core@0.5.15\");\nconst dossierServer = await import(\"https://esm.sh/@dossierhq/server@0.5.15\");\nconst dossierSqlJs = await import(\"https://esm.sh/@dossierhq/sql.js@0.5.15\");\nconst { default: initSqlJs } = await import(\"https://esm.sh/sql.js@1.10.2\");\nconst logger = dossierCore.createConsoleLogger(console);\nlogger.info(\"Initializing Dossier...\");\nconst SQL = await initSqlJs({ locateFile: file => `https://sql.js.org/dist/${file}` });\nconst database = new SQL.Database();\nconst databaseAdapterResult = await dossierSqlJs.createSqlJsAdapter({ logger }, database, {\n    migrate: true,\n    fts: { version: 'fts4' },\n    journalMode: 'memory',\n});\nconst serverResult = await dossierServer.createServer({ logger, databaseAdapter: databaseAdapterResult.valueOrThrow() });\nconst server = serverResult.valueOrThrow();\n\nconst sessionResult = await server.createSession({ provider: 'sys', identifier: 'user', defaultAuthKeys: ['none', 'subject'], logger, databasePerformance: null});\nconst session = sessionResult.valueOrThrow();\nconst adminClient = server.createAdminClient(session);",
                "type": "CodapiSnippet"
              },
              "format": "",
              "version": 1
            },
            {
              "children": [],
              "direction": null,
              "format": "",
              "indent": 0,
              "type": "paragraph",
              "version": 1
            }
          ],
          "direction": null,
          "format": "",
          "indent": 0,
          "type": "root",
          "version": 1
        }
      }
    }
  }
}
