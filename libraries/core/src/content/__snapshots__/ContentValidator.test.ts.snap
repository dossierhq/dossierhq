// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Validate entity entity > Fail: reference with extra keys 1`] = `
[
  {
    "message": "Invalid keys for Entity: version",
    "path": [
      "entity",
      "fields",
      "normal",
    ],
    "type": "save",
  },
]
`;

exports[`Validate entity location > Fail: extra keys in location object 1`] = `
[
  {
    "message": "Invalid keys for Location: extra",
    "path": [
      "entity",
      "fields",
      "normal",
    ],
    "type": "save",
  },
]
`;

exports[`Validate entity number > Fail: integer with float value 1`] = `
[
  {
    "message": "Value must be an integer",
    "path": [
      "entity",
      "fields",
      "integer",
    ],
    "type": "save",
  },
]
`;

exports[`Validate entity richText > Fail: rich text text node with line break 1`] = `
[
  {
    "message": "Rich text text nodes cannot contain line breaks, use linebreak nodes instead",
    "path": [
      "entity",
      "fields",
      "anyNodes",
      0,
      0,
    ],
    "type": "save",
  },
]
`;

exports[`Validate entity shared > Fail: extra entity fields 1`] = `
[
  {
    "message": "Invalid fields for entity of type StringsEntity: extra",
    "path": [
      "entity",
      "fields",
    ],
    "type": "save",
  },
]
`;

exports[`Validate entity shared > Fail: required with no value 1`] = `
[
  {
    "message": "Required field is empty",
    "path": [
      "entity",
      "fields",
      "required",
    ],
    "type": "publish",
  },
]
`;

exports[`Validate entity string > Fail: matchPattern unmatched string 1`] = `
[
  {
    "message": "Value does not match pattern fooBarBaz",
    "path": [
      "entity",
      "fields",
      "pattern",
    ],
    "type": "save",
  },
]
`;

exports[`Validate entity string > Fail: matchPattern unmatched string item in list 1`] = `
[
  {
    "message": "Value does not match pattern fooBarBaz",
    "path": [
      "entity",
      "fields",
      "patternList",
      1,
    ],
    "type": "save",
  },
]
`;

exports[`Validate entity string > Fail: multiline=false string with line break 1`] = `
[
  {
    "message": "Value cannot contain line breaks",
    "path": [
      "entity",
      "fields",
      "normal",
    ],
    "type": "save",
  },
]
`;

exports[`Validate entity string > Fail: values unmatched string 1`] = `
[
  {
    "message": "Value does not match any of the allowed values",
    "path": [
      "entity",
      "fields",
      "values",
    ],
    "type": "save",
  },
]
`;

exports[`Validate entity string > Fail: values unmatched string list 1`] = `
[
  {
    "message": "Value does not match any of the allowed values",
    "path": [
      "entity",
      "fields",
      "valuesList",
      1,
    ],
    "type": "save",
  },
]
`;

exports[`Validate entity valueItem > Fail: admin only value item in normal field 1`] = `
[
  {
    "message": "Value item of type AdminOnlyValueItem is adminOnly",
    "path": [
      "entity",
      "fields",
      "any",
    ],
    "type": "publish",
  },
]
`;

exports[`Validate entity valueItem > Fail: extra fields 1`] = `
[
  {
    "message": "Invalid fields for value item of type NumbersValueItem: extra",
    "path": [
      "entity",
      "fields",
      "any",
    ],
    "type": "save",
  },
]
`;

exports[`Validate entity valueItem > Fail: wrong type, not matching valueTypes 1`] = `
[
  {
    "message": "Value item of type NumbersValueItem is not allowed in field (supported types: StringsValueItem)",
    "path": [
      "entity",
      "fields",
      "stringsValueItem",
    ],
    "type": "save",
  },
]
`;

exports[`validateEntityInfo > authKey not matching pattern 1`] = `
{
  "message": "AuthKey 'something else' does not match pattern 'noneSubject' (^(none|subject)$)",
  "path": [
    "info",
    "authKey",
  ],
  "type": "save",
}
`;

exports[`validateEntityInfo > invalid type 1`] = `
{
  "message": "Entity type InvalidType doesn’t exist",
  "path": [
    "entity",
    "info",
    "type",
  ],
  "type": "save",
}
`;

exports[`validateEntityInfo > name with line break 1`] = `
{
  "message": "Name cannot contain line breaks",
  "path": [
    "entity",
    "info",
    "name",
  ],
  "type": "save",
}
`;

exports[`validateEntityInfo > no authKey 1`] = `
{
  "message": "AuthKey is required",
  "path": [
    "entity",
    "info",
    "authKey",
  ],
  "type": "save",
}
`;

exports[`validateEntityInfo > no name 1`] = `
{
  "message": "Name is required",
  "path": [
    "entity",
    "info",
    "name",
  ],
  "type": "save",
}
`;

exports[`validateEntityInfo > no type 1`] = `
{
  "message": "Type is required",
  "path": [
    "entity",
    "info",
    "type",
  ],
  "type": "save",
}
`;

exports[`validateEntityInfoForCreate > authKey not matching pattern 1`] = `
{
  "message": "AuthKey 'something else' does not match pattern 'noneSubject' (^(none|subject)$)",
  "path": [
    "info",
    "authKey",
  ],
  "type": "save",
}
`;

exports[`validateEntityInfoForCreate > invalid type 1`] = `
{
  "message": "Entity type InvalidType doesn’t exist",
  "path": [
    "entity",
    "info",
    "type",
  ],
  "type": "save",
}
`;

exports[`validateEntityInfoForCreate > invalid version 1`] = `
{
  "message": "Version must be 0 when creating a new entity",
  "path": [
    "entity",
    "info",
    "version",
  ],
  "type": "save",
}
`;

exports[`validateEntityInfoForCreate > name with line break 1`] = `
{
  "message": "Name cannot contain line breaks",
  "path": [
    "entity",
    "info",
    "name",
  ],
  "type": "save",
}
`;

exports[`validateEntityInfoForCreate > no authKey 1`] = `
{
  "message": "AuthKey is required",
  "path": [
    "entity",
    "info",
    "authKey",
  ],
  "type": "save",
}
`;

exports[`validateEntityInfoForCreate > no name 1`] = `
{
  "message": "Name is required",
  "path": [
    "entity",
    "info",
    "name",
  ],
  "type": "save",
}
`;

exports[`validateEntityInfoForCreate > no type 1`] = `
{
  "message": "Type is required",
  "path": [
    "entity",
    "info",
    "type",
  ],
  "type": "save",
}
`;

exports[`validateEntityInfoForUpdate > change authKey 1`] = `
{
  "message": "New authKey subject doesn’t correspond to previous authKey none",
  "path": [
    "entity",
    "info",
    "authKey",
  ],
  "type": "save",
}
`;

exports[`validateEntityInfoForUpdate > change type 1`] = `
{
  "message": "New type RichTextsEntity doesn’t correspond to previous type StringEntity",
  "path": [
    "entity",
    "info",
    "type",
  ],
  "type": "save",
}
`;

exports[`validateEntityInfoForUpdate > name with line break 1`] = `
{
  "message": "Name cannot contain line breaks",
  "path": [
    "entity",
    "info",
    "name",
  ],
  "type": "save",
}
`;

exports[`validateEntityInfoForUpdate > version with wrong value 1`] = `
{
  "message": "The latest version of the entity is 1, so the new version must be 2 (got 1)",
  "path": [
    "entity",
    "info",
    "version",
  ],
  "type": "save",
}
`;

exports[`validateTraverseNodeForSave > error 1`] = `
{
  "message": "Error message",
  "path": [
    "entity",
    "foo",
  ],
  "type": "save",
}
`;
