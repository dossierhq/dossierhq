// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`AdminSchemaWithMigrations.updateAndValidate() > change index 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": "anotherIndex",
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "field",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [
    {
      "name": "anotherIndex",
      "type": "unique",
    },
  ],
  "migrations": [],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() > duplicate values 1`] = `
{
  "componentTypes": [
    {
      "adminOnly": false,
      "fields": [],
      "name": "ValueType",
    },
  ],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "entityTypes": [
            "Entity",
          ],
          "list": false,
          "name": "entity",
          "required": false,
          "type": "Entity",
        },
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "string",
          "required": false,
          "type": "String",
          "values": [
            {
              "value": "a",
            },
            {
              "value": "b",
            },
          ],
        },
        {
          "adminOnly": false,
          "componentTypes": [
            "ValueType",
          ],
          "entityTypes": [
            "Entity",
          ],
          "linkEntityTypes": [
            "Entity",
          ],
          "list": false,
          "name": "richText",
          "required": false,
          "richTextNodes": [
            "entity",
            "entityLink",
            "linebreak",
            "paragraph",
            "root",
            "tab",
            "text",
            "valueItem",
          ],
          "type": "RichText",
        },
        {
          "adminOnly": false,
          "componentTypes": [
            "ValueType",
          ],
          "list": false,
          "name": "valueItem",
          "required": false,
          "type": "Component",
        },
      ],
      "name": "Entity",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [],
  "patterns": [],
  "schemaKind": "admin",
  "version": 1,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() > empty->entity with pattern 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": "aPattern",
      "fields": [],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [],
  "patterns": [
    {
      "name": "aPattern",
      "pattern": "^hello$",
    },
  ],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() > field with index 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": "uniqueIndex",
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "title",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [
    {
      "name": "uniqueIndex",
      "type": "unique",
    },
  ],
  "migrations": [],
  "patterns": [],
  "schemaKind": "admin",
  "version": 1,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() > field with matchPattern 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": "aPattern",
          "multiline": false,
          "name": "title",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [],
  "patterns": [
    {
      "name": "aPattern",
      "pattern": "^pattern$",
    },
  ],
  "schemaKind": "admin",
  "version": 1,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() > fields not updated are kept 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "string",
          "required": true,
          "type": "String",
          "values": [],
        },
        {
          "adminOnly": false,
          "integer": false,
          "list": false,
          "name": "number",
          "required": false,
          "type": "Number",
        },
        {
          "adminOnly": false,
          "list": false,
          "name": "boolean",
          "required": false,
          "type": "Boolean",
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() > unused pattern is removed 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() > update pattern 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": "aPattern",
      "fields": [],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [],
  "patterns": [
    {
      "name": "aPattern",
      "pattern": "^new-pattern$",
    },
  ],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() > use existing adminOnly value if not specified on component type update 1`] = `
{
  "componentTypes": [
    {
      "adminOnly": true,
      "fields": [],
      "name": "Foo",
    },
  ],
  "entityTypes": [],
  "indexes": [],
  "migrations": [],
  "patterns": [],
  "schemaKind": "admin",
  "version": 1,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() > use existing adminOnly value if not specified on field update 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": true,
          "list": false,
          "name": "field",
          "required": false,
          "type": "Boolean",
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [],
  "patterns": [],
  "schemaKind": "admin",
  "version": 1,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() > use existing adminOnly, authKeyPattern value if not specified on entity type update 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": true,
      "authKeyPattern": "aPattern",
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "title",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "Foo",
      "nameField": "title",
    },
  ],
  "indexes": [],
  "migrations": [],
  "patterns": [
    {
      "name": "aPattern",
      "pattern": ".*",
    },
  ],
  "schemaKind": "admin",
  "version": 1,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() > use existing componentTypes value if not specified on Component field update 1`] = `
{
  "componentTypes": [
    {
      "adminOnly": false,
      "fields": [],
      "name": "Bar",
    },
  ],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "componentTypes": [
            "Bar",
          ],
          "list": false,
          "name": "field",
          "required": false,
          "type": "Component",
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [],
  "patterns": [],
  "schemaKind": "admin",
  "version": 1,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() > use existing entityTypes value if not specified on Entity field update 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "entityTypes": [
            "Foo",
          ],
          "list": false,
          "name": "field",
          "required": false,
          "type": "Entity",
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [],
  "patterns": [],
  "schemaKind": "admin",
  "version": 1,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() > use existing entityTypes, linkEntityTypes, componentTypes, richTextNodes values if not specified on RichText field update 1`] = `
{
  "componentTypes": [
    {
      "adminOnly": false,
      "fields": [],
      "name": "Bar",
    },
  ],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "componentTypes": [
            "Bar",
          ],
          "entityTypes": [
            "Foo",
          ],
          "linkEntityTypes": [
            "Foo",
          ],
          "list": false,
          "name": "field",
          "required": false,
          "richTextNodes": [
            "entity",
            "entityLink",
            "linebreak",
            "paragraph",
            "root",
            "tab",
            "text",
            "valueItem",
          ],
          "type": "RichText",
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [],
  "patterns": [],
  "schemaKind": "admin",
  "version": 1,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() > use existing index, multiline, matchPattern values if not specified on String field update 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": "anIndex",
          "list": false,
          "matchPattern": "aPattern",
          "multiline": true,
          "name": "field",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [
    {
      "name": "anIndex",
      "type": "unique",
    },
  ],
  "migrations": [],
  "patterns": [
    {
      "name": "aPattern",
      "pattern": ".*",
    },
  ],
  "schemaKind": "admin",
  "version": 1,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() > use existing integer value if not specified on Number field update 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "integer": true,
          "list": false,
          "name": "field",
          "required": false,
          "type": "Number",
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [],
  "patterns": [],
  "schemaKind": "admin",
  "version": 1,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() > use existing list value if not specified on field update 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": true,
          "matchPattern": null,
          "multiline": false,
          "name": "field",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [],
  "patterns": [],
  "schemaKind": "admin",
  "version": 1,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() > use existing required value if not specified on field update 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "list": false,
          "name": "field",
          "required": true,
          "type": "Boolean",
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [],
  "patterns": [],
  "schemaKind": "admin",
  "version": 1,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() > use existing values value if not specified on String field update 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "field",
          "required": false,
          "type": "String",
          "values": [
            {
              "value": "hello",
            },
          ],
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [],
  "patterns": [],
  "schemaKind": "admin",
  "version": 1,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() deleteField > component field (migration only) 1`] = `
{
  "componentTypes": [
    {
      "adminOnly": false,
      "fields": [],
      "name": "Foo",
    },
  ],
  "entityTypes": [],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "deleteField",
          "componentType": "Foo",
          "field": "field",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() deleteField > entity field (migration only) 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "deleteField",
          "entityType": "Foo",
          "field": "field",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() deleteField > entity field, replace with other field of same name 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "list": false,
          "name": "field",
          "required": false,
          "type": "Boolean",
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "deleteField",
          "entityType": "Foo",
          "field": "field",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() deleteField > entity name field with another field 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "anotherField",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "deleteField",
          "entityType": "Foo",
          "field": "field",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() deleteIndex > unique index 1`] = `
{
  "componentTypes": [
    {
      "adminOnly": false,
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "field",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "ValueType",
    },
  ],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "field",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "EntityType",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() deleteIndex > unique index, replace with other index with same name 1`] = `
{
  "componentTypes": [
    {
      "adminOnly": false,
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "field",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "ValueType",
    },
  ],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": "anIndex",
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "anotherField",
          "required": false,
          "type": "String",
          "values": [],
        },
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "field",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "EntityType",
      "nameField": null,
    },
  ],
  "indexes": [
    {
      "name": "anIndex",
      "type": "unique",
    },
  ],
  "migrations": [],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() deleteType > component type 1`] = `
{
  "componentTypes": [],
  "entityTypes": [],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "deleteType",
          "componentType": "Foo",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() deleteType > component type referenced by other fields 1`] = `
{
  "componentTypes": [
    {
      "adminOnly": false,
      "fields": [
        {
          "adminOnly": false,
          "componentTypes": [
            "Bar",
          ],
          "list": false,
          "name": "valueItem",
          "required": false,
          "type": "Component",
        },
        {
          "adminOnly": false,
          "componentTypes": [
            "Bar",
          ],
          "entityTypes": [],
          "linkEntityTypes": [],
          "list": false,
          "name": "richText",
          "required": false,
          "richTextNodes": [],
          "type": "RichText",
        },
      ],
      "name": "Bar",
    },
  ],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "componentTypes": [
            "Bar",
          ],
          "list": false,
          "name": "valueItem",
          "required": false,
          "type": "Component",
        },
        {
          "adminOnly": false,
          "componentTypes": [
            "Bar",
          ],
          "entityTypes": [],
          "linkEntityTypes": [],
          "list": false,
          "name": "richText",
          "required": false,
          "richTextNodes": [],
          "type": "RichText",
        },
      ],
      "name": "Baz",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "deleteType",
          "componentType": "Foo",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() deleteType > entity type 1`] = `
{
  "componentTypes": [],
  "entityTypes": [],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "deleteType",
          "entityType": "Foo",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() deleteType > entity type referenced by other fields 1`] = `
{
  "componentTypes": [
    {
      "adminOnly": false,
      "fields": [
        {
          "adminOnly": false,
          "entityTypes": [
            "Bar",
          ],
          "list": false,
          "name": "entity",
          "required": false,
          "type": "Entity",
        },
        {
          "adminOnly": false,
          "componentTypes": [],
          "entityTypes": [
            "Bar",
          ],
          "linkEntityTypes": [
            "Bar",
          ],
          "list": false,
          "name": "richText",
          "required": false,
          "richTextNodes": [],
          "type": "RichText",
        },
      ],
      "name": "Baz",
    },
  ],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "entityTypes": [
            "Bar",
          ],
          "list": false,
          "name": "entity",
          "required": false,
          "type": "Entity",
        },
        {
          "adminOnly": false,
          "componentTypes": [],
          "entityTypes": [
            "Bar",
          ],
          "linkEntityTypes": [
            "Bar",
          ],
          "list": false,
          "name": "richText",
          "required": false,
          "richTextNodes": [],
          "type": "RichText",
        },
      ],
      "name": "Bar",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "deleteType",
          "entityType": "Foo",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() deleteType > entity type, replace with other entity type with same name 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "entityTypes": [
            "Bar",
          ],
          "list": false,
          "name": "entity",
          "required": false,
          "type": "Entity",
        },
        {
          "adminOnly": false,
          "componentTypes": [],
          "entityTypes": [
            "Bar",
          ],
          "linkEntityTypes": [
            "Bar",
          ],
          "list": false,
          "name": "richText",
          "required": false,
          "richTextNodes": [],
          "type": "RichText",
        },
      ],
      "name": "Bar",
      "nameField": null,
    },
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "list": false,
          "name": "field",
          "required": false,
          "type": "Boolean",
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "deleteType",
          "entityType": "Foo",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() migrations > include migrations for older versions 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "deleteField",
          "entityType": "Foo",
          "field": "two",
        },
      ],
      "version": 3,
    },
    {
      "actions": [
        {
          "action": "deleteField",
          "entityType": "Foo",
          "field": "one",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 3,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() renameField > component field (migration only) 1`] = `
{
  "componentTypes": [
    {
      "adminOnly": false,
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "newField",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "Foo",
    },
  ],
  "entityTypes": [],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "renameField",
          "componentType": "Foo",
          "field": "field",
          "newName": "newField",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() renameField > entity field (migration only) 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "newField",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "renameField",
          "entityType": "Foo",
          "field": "field",
          "newName": "newField",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() renameField > entity field with other fields 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": true,
          "matchPattern": null,
          "multiline": false,
          "name": "one",
          "required": false,
          "type": "String",
          "values": [],
        },
        {
          "adminOnly": false,
          "integer": true,
          "list": false,
          "name": "newName",
          "required": false,
          "type": "Number",
        },
        {
          "adminOnly": false,
          "list": true,
          "name": "three",
          "required": false,
          "type": "Boolean",
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "renameField",
          "entityType": "Foo",
          "field": "two",
          "newName": "newName",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() renameField > entity name field, modify validations 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "newField",
          "required": false,
          "type": "String",
          "values": [
            {
              "value": "one",
            },
          ],
        },
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "anotherField",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "Foo",
      "nameField": "newField",
    },
  ],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "renameField",
          "entityType": "Foo",
          "field": "field",
          "newName": "newField",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() renameField > entity rich text field, many validations 1`] = `
{
  "componentTypes": [
    {
      "adminOnly": false,
      "fields": [],
      "name": "ValueItem",
    },
  ],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": true,
          "componentTypes": [
            "ValueItem",
          ],
          "entityTypes": [
            "Foo",
          ],
          "linkEntityTypes": [
            "Foo",
          ],
          "list": true,
          "name": "newName",
          "required": true,
          "richTextNodes": [
            "entity",
            "entityLink",
            "linebreak",
            "paragraph",
            "root",
            "tab",
            "text",
            "valueItem",
          ],
          "type": "RichText",
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "renameField",
          "entityType": "Foo",
          "field": "oldName",
          "newName": "newName",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() renameIndex > unique index 1`] = `
{
  "componentTypes": [
    {
      "adminOnly": false,
      "fields": [
        {
          "adminOnly": false,
          "index": "newIndex",
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "field",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "ValueType",
    },
  ],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": "newIndex",
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "field",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "EntityType",
      "nameField": null,
    },
  ],
  "indexes": [
    {
      "name": "newIndex",
      "type": "unique",
    },
  ],
  "migrations": [],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() renameIndex > unique index and add to another field 1`] = `
{
  "componentTypes": [
    {
      "adminOnly": false,
      "fields": [
        {
          "adminOnly": false,
          "index": "newIndex",
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "field",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "ComponentType",
    },
  ],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": "newIndex",
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "anotherField",
          "required": false,
          "type": "String",
          "values": [],
        },
        {
          "adminOnly": false,
          "index": "newIndex",
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "field",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "EntityType",
      "nameField": null,
    },
  ],
  "indexes": [
    {
      "name": "newIndex",
      "type": "unique",
    },
  ],
  "migrations": [],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() renameIndex > unique index, add other index with same name 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": "oldIndex",
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "fieldB",
          "required": false,
          "type": "String",
          "values": [],
        },
        {
          "adminOnly": false,
          "index": "newIndex",
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "fieldA",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "OneEntity",
      "nameField": null,
    },
  ],
  "indexes": [
    {
      "name": "newIndex",
      "type": "unique",
    },
    {
      "name": "oldIndex",
      "type": "unique",
    },
  ],
  "migrations": [],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() renameType > component type 1`] = `
{
  "componentTypes": [
    {
      "adminOnly": false,
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "field",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "Foo2",
    },
  ],
  "entityTypes": [],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "renameType",
          "componentType": "Foo",
          "newName": "Foo2",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() renameType > component type referenced by other fields 1`] = `
{
  "componentTypes": [
    {
      "adminOnly": false,
      "fields": [
        {
          "adminOnly": false,
          "componentTypes": [
            "Bar",
            "Foo2",
          ],
          "list": false,
          "name": "valueItem",
          "required": false,
          "type": "Component",
        },
        {
          "adminOnly": false,
          "componentTypes": [
            "Bar",
            "Foo2",
          ],
          "entityTypes": [],
          "linkEntityTypes": [],
          "list": false,
          "name": "richText",
          "required": false,
          "richTextNodes": [],
          "type": "RichText",
        },
      ],
      "name": "Bar",
    },
    {
      "adminOnly": false,
      "fields": [
        {
          "adminOnly": false,
          "componentTypes": [
            "Foo2",
          ],
          "list": false,
          "name": "field",
          "required": false,
          "type": "Component",
        },
      ],
      "name": "Foo2",
    },
  ],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "componentTypes": [
            "Bar",
            "Foo2",
          ],
          "list": false,
          "name": "valueItem",
          "required": false,
          "type": "Component",
        },
        {
          "adminOnly": false,
          "componentTypes": [
            "Bar",
            "Foo2",
          ],
          "entityTypes": [],
          "linkEntityTypes": [],
          "list": false,
          "name": "richText",
          "required": false,
          "richTextNodes": [],
          "type": "RichText",
        },
      ],
      "name": "Baz",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "renameType",
          "componentType": "Foo",
          "newName": "Foo2",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() renameType > entity type 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "field",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "Foo2",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "renameType",
          "entityType": "Foo",
          "newName": "Foo2",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() renameType > entity type referenced by other fields 1`] = `
{
  "componentTypes": [
    {
      "adminOnly": false,
      "fields": [
        {
          "adminOnly": false,
          "entityTypes": [
            "Bar",
            "Foo2",
          ],
          "list": false,
          "name": "entity",
          "required": false,
          "type": "Entity",
        },
        {
          "adminOnly": false,
          "componentTypes": [],
          "entityTypes": [
            "Bar",
            "Foo2",
          ],
          "linkEntityTypes": [
            "Bar",
            "Foo2",
          ],
          "list": false,
          "name": "richText",
          "required": false,
          "richTextNodes": [],
          "type": "RichText",
        },
      ],
      "name": "Baz",
    },
  ],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "entityTypes": [
            "Bar",
            "Foo2",
          ],
          "list": false,
          "name": "entity",
          "required": false,
          "type": "Entity",
        },
        {
          "adminOnly": false,
          "componentTypes": [],
          "entityTypes": [
            "Bar",
            "Foo2",
          ],
          "linkEntityTypes": [
            "Bar",
            "Foo2",
          ],
          "list": false,
          "name": "richText",
          "required": false,
          "richTextNodes": [],
          "type": "RichText",
        },
      ],
      "name": "Bar",
      "nameField": null,
    },
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "entityTypes": [
            "Foo2",
          ],
          "list": false,
          "name": "field",
          "required": false,
          "type": "Entity",
        },
      ],
      "name": "Foo2",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "renameType",
          "entityType": "Foo",
          "newName": "Foo2",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;

exports[`AdminSchemaWithMigrations.updateAndValidate() renameType > entity type, add other entity type with same name 1`] = `
{
  "componentTypes": [],
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "entityTypes": [
            "Bar",
            "Foo2",
          ],
          "list": false,
          "name": "entity",
          "required": false,
          "type": "Entity",
        },
        {
          "adminOnly": false,
          "componentTypes": [],
          "entityTypes": [
            "Bar",
            "Foo2",
          ],
          "linkEntityTypes": [
            "Bar",
            "Foo2",
          ],
          "list": false,
          "name": "richText",
          "required": false,
          "richTextNodes": [],
          "type": "RichText",
        },
      ],
      "name": "Bar",
      "nameField": null,
    },
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "list": false,
          "name": "field",
          "required": false,
          "type": "Boolean",
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "entityTypes": [
            "Foo2",
          ],
          "list": false,
          "name": "field",
          "required": false,
          "type": "Entity",
        },
      ],
      "name": "Foo2",
      "nameField": null,
    },
  ],
  "indexes": [],
  "migrations": [
    {
      "actions": [
        {
          "action": "renameType",
          "entityType": "Foo",
          "newName": "Foo2",
        },
      ],
      "version": 2,
    },
  ],
  "patterns": [],
  "schemaKind": "admin",
  "version": 2,
}
`;
