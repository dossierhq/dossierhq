// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`updateAndValidate() > duplicate values 1`] = `
{
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "entityTypes": [
            "Entity",
          ],
          "list": false,
          "name": "entity",
          "required": false,
          "type": "Entity",
        },
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "string",
          "required": false,
          "type": "String",
          "values": [
            {
              "value": "a",
            },
            {
              "value": "b",
            },
          ],
        },
        {
          "adminOnly": false,
          "entityTypes": [
            "Entity",
          ],
          "linkEntityTypes": [
            "Entity",
          ],
          "list": false,
          "name": "richText",
          "required": false,
          "richTextNodes": [
            "entity",
            "entityLink",
            "linebreak",
            "paragraph",
            "root",
            "tab",
            "text",
            "valueItem",
          ],
          "type": "RichText",
          "valueTypes": [
            "ValueType",
          ],
        },
        {
          "adminOnly": false,
          "list": false,
          "name": "valueItem",
          "required": false,
          "type": "ValueItem",
          "valueTypes": [
            "ValueType",
          ],
        },
      ],
      "name": "Entity",
      "nameField": null,
    },
  ],
  "indexes": [],
  "patterns": [],
  "valueTypes": [
    {
      "adminOnly": false,
      "fields": [],
      "name": "ValueType",
    },
  ],
  "version": 1,
}
`;

exports[`updateAndValidate() > empty->entity with pattern 1`] = `
{
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": "aPattern",
      "fields": [],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "patterns": [
    {
      "name": "aPattern",
      "pattern": "^hello$",
    },
  ],
  "valueTypes": [],
  "version": 2,
}
`;

exports[`updateAndValidate() > field with index 1`] = `
{
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": "uniqueIndex",
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "title",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [
    {
      "name": "uniqueIndex",
      "type": "unique",
    },
  ],
  "patterns": [],
  "valueTypes": [],
  "version": 1,
}
`;

exports[`updateAndValidate() > field with matchPattern 1`] = `
{
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": "aPattern",
          "multiline": false,
          "name": "title",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "patterns": [
    {
      "name": "aPattern",
      "pattern": "^pattern$",
    },
  ],
  "valueTypes": [],
  "version": 1,
}
`;

exports[`updateAndValidate() > fields not updated are kept 1`] = `
{
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "string",
          "required": true,
          "type": "String",
          "values": [],
        },
        {
          "adminOnly": false,
          "integer": false,
          "list": false,
          "name": "number",
          "required": false,
          "type": "Number",
        },
        {
          "adminOnly": false,
          "list": false,
          "name": "boolean",
          "required": false,
          "type": "Boolean",
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "patterns": [],
  "valueTypes": [],
  "version": 2,
}
`;

exports[`updateAndValidate() > unused pattern is removed 1`] = `
{
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "patterns": [],
  "valueTypes": [],
  "version": 2,
}
`;

exports[`updateAndValidate() > update pattern 1`] = `
{
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": "aPattern",
      "fields": [],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "patterns": [
    {
      "name": "aPattern",
      "pattern": "^new-pattern$",
    },
  ],
  "valueTypes": [],
  "version": 2,
}
`;

exports[`updateAndValidate() > use existing adminOnly value if not specified on field update 1`] = `
{
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": true,
          "list": false,
          "name": "field",
          "required": false,
          "type": "Boolean",
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "patterns": [],
  "valueTypes": [],
  "version": 1,
}
`;

exports[`updateAndValidate() > use existing adminOnly value if not specified on value type update 1`] = `
{
  "entityTypes": [],
  "indexes": [],
  "patterns": [],
  "valueTypes": [
    {
      "adminOnly": true,
      "fields": [],
      "name": "Foo",
    },
  ],
  "version": 1,
}
`;

exports[`updateAndValidate() > use existing adminOnly, authKeyPattern value if not specified on entity type update 1`] = `
{
  "entityTypes": [
    {
      "adminOnly": true,
      "authKeyPattern": "aPattern",
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "title",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "Foo",
      "nameField": "title",
    },
  ],
  "indexes": [],
  "patterns": [
    {
      "name": "aPattern",
      "pattern": ".*",
    },
  ],
  "valueTypes": [],
  "version": 1,
}
`;

exports[`updateAndValidate() > use existing entityTypes value if not specified on Entity field update 1`] = `
{
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "entityTypes": [
            "Foo",
          ],
          "list": false,
          "name": "field",
          "required": false,
          "type": "Entity",
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "patterns": [],
  "valueTypes": [],
  "version": 1,
}
`;

exports[`updateAndValidate() > use existing entityTypes, linkEntityTypes, valueTypes, richTextNodes values if not specified on RichText field update 1`] = `
{
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "entityTypes": [
            "Foo",
          ],
          "linkEntityTypes": [
            "Foo",
          ],
          "list": false,
          "name": "field",
          "required": false,
          "richTextNodes": [
            "entity",
            "entityLink",
            "linebreak",
            "paragraph",
            "root",
            "tab",
            "text",
            "valueItem",
          ],
          "type": "RichText",
          "valueTypes": [
            "Bar",
          ],
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "patterns": [],
  "valueTypes": [
    {
      "adminOnly": false,
      "fields": [],
      "name": "Bar",
    },
  ],
  "version": 1,
}
`;

exports[`updateAndValidate() > use existing index, multiline, matchPattern values if not specified on String field update 1`] = `
{
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": "anIndex",
          "list": false,
          "matchPattern": "aPattern",
          "multiline": true,
          "name": "field",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [
    {
      "name": "anIndex",
      "type": "unique",
    },
  ],
  "patterns": [
    {
      "name": "aPattern",
      "pattern": ".*",
    },
  ],
  "valueTypes": [],
  "version": 1,
}
`;

exports[`updateAndValidate() > use existing integer value if not specified on Number field update 1`] = `
{
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "integer": true,
          "list": false,
          "name": "field",
          "required": false,
          "type": "Number",
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "patterns": [],
  "valueTypes": [],
  "version": 1,
}
`;

exports[`updateAndValidate() > use existing list value if not specified on field update 1`] = `
{
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": true,
          "matchPattern": null,
          "multiline": false,
          "name": "field",
          "required": false,
          "type": "String",
          "values": [],
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "patterns": [],
  "valueTypes": [],
  "version": 1,
}
`;

exports[`updateAndValidate() > use existing required value if not specified on field update 1`] = `
{
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "list": false,
          "name": "field",
          "required": true,
          "type": "Boolean",
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "patterns": [],
  "valueTypes": [],
  "version": 1,
}
`;

exports[`updateAndValidate() > use existing valueTypes value if not specified on ValueItem field update 1`] = `
{
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "list": false,
          "name": "field",
          "required": false,
          "type": "ValueItem",
          "valueTypes": [
            "Bar",
          ],
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "patterns": [],
  "valueTypes": [
    {
      "adminOnly": false,
      "fields": [],
      "name": "Bar",
    },
  ],
  "version": 1,
}
`;

exports[`updateAndValidate() > use existing values value if not specified on String field update 1`] = `
{
  "entityTypes": [
    {
      "adminOnly": false,
      "authKeyPattern": null,
      "fields": [
        {
          "adminOnly": false,
          "index": null,
          "list": false,
          "matchPattern": null,
          "multiline": false,
          "name": "field",
          "required": false,
          "type": "String",
          "values": [
            {
              "value": "hello",
            },
          ],
        },
      ],
      "name": "Foo",
      "nameField": null,
    },
  ],
  "indexes": [],
  "patterns": [],
  "valueTypes": [],
  "version": 1,
}
`;
